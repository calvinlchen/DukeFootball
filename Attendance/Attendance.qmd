---
title: "Duke Attendance Stats 2022-23"
format: pdf
editor: visual
messages: FALSE
warnings: FALSE
---

# Packages

```{r}
#| label: load-packages

library(tidyverse)
library(tidymodels)

```

# Home Game Attendance

## Import Data

```{r}
#| label: load-data

attendance_data <- read_csv("data/Duke Stats - DukeAttendanceV2.csv")

attendance_data <- attendance_data |>
  mutate(isHome = if_else(Site == "Home", TRUE, FALSE)) |>
  mutate(Day = as.factor(Day))

home_attendance_data <- attendance_data |>
  filter(isHome == TRUE)

home_attendance_data

```

## Time of Day

```{r}
#| label: time-of-day-models

home_attendance_data |>
  ggplot(
    aes(x = Start_Time, y = AttNum)
  ) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, color = "gray") +
  geom_smooth(method = "glm", formula = y ~ exp(x), se = FALSE, color = "orange") #+
  #scale_colour_viridis_c()

time_lm <- linear_reg() |>
  set_engine("lm") |>
  fit(AttNum ~ Start_Time, data = home_attendance_data)

time_glm <- linear_reg() |>
  set_engine("glm") |>
  fit(AttNum ~ exp(Start_Time), data = home_attendance_data)

tidy(time_lm)
tidy(time_glm)

glance(time_lm)$AIC
glance(time_glm)$AIC

```

### + Win Chance

```{r}
#| label: time-of-day-AND-win-chance

home_attendance_data |>
  ggplot(
    aes(x = Start_Time, y = AttNum, color = ESPN_WinPred)
  ) +
  geom_point() +
  geom_smooth(method = "glm", formula = y ~ exp(x), se = FALSE, color = "orange") +
  labs(title = "Start Time vs. Stadium Attendance",
       subtitle = "Duke football games at Wallace Wade; 2022-23",
       x = "Approx. Kickoff Time (24hr format)",
       y = "Number of In-Person Attendees",
       color = "Chance of Duke\nvictory, per ESPN") #+
  #scale_colour_viridis_c()

time_winpred_add_glm <- linear_reg() |>
  set_engine("glm") |>
  fit(AttNum ~ exp(Start_Time) + ESPN_WinPred, data = home_attendance_data)

time_winpred_int_glm <- linear_reg() |>
  set_engine("glm") |>
  fit(AttNum ~ exp(Start_Time) * ESPN_WinPred, data = home_attendance_data)

tidy(time_winpred_add_glm)
tidy(time_winpred_int_glm)

glance(time_winpred_add_glm)$AIC
glance(time_winpred_int_glm)$AIC

```

### + Win Chance + Day of Week

```{r}
#| label: day-of-week-included

home_attendance_data |>
  mutate(Day = fct_relevel(Day, "Mon", "Thu", "Fri", "Sat")) |>
  ggplot(
    aes(x = Start_Time, y = AttNum, color = Day)
  ) +
  geom_point() +
  geom_smooth(method = "glm", formula = y ~ exp(x), se = FALSE) #+
  #scale_colour_viridis_c()

time_winpred_day_glm <- linear_reg() |>
  set_engine("glm") |>
  fit(AttNum ~ exp(Start_Time) + Day + ESPN_WinPred, data = home_attendance_data)

tidy(time_winpred_day_glm)

glance(time_winpred_day_glm)$AIC

```

### + Win Chance + School Break {style="color: rgb(0, 0, 0); font-family: \"Lucida Sans\", \"DejaVu Sans\", \"Lucida Grande\", \"Segoe UI\", Verdana, Helvetica, sans-serif, serif; font-style: normal; font-variant-ligatures: none; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; caret-color: rgb(0, 0, 0); white-space: break-spaces; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"}

```{r}
#| label: student-classes-break

home_attendance_data |>
  ggplot(
    aes(x = Start_Time, y = AttNum, color = SchoolBreak)
  ) +
  geom_point() +
  geom_smooth(method = "glm", formula = y ~ exp(x), se = FALSE) #+
  #scale_colour_viridis_c()

time_winpred_break_int_glm <- linear_reg() |>
  set_engine("glm") |>
  fit(AttNum ~ exp(Start_Time) * SchoolBreak * ESPN_WinPred, data = home_attendance_data)

time_winpred_break_add_glm <- linear_reg() |>
  set_engine("glm") |>
  fit(AttNum ~ exp(Start_Time) + SchoolBreak * ESPN_WinPred, data = home_attendance_data)

tidy(time_winpred_break_int_glm)
tidy(time_winpred_break_add_glm)

glance(time_winpred_break_int_glm)$AIC
glance(time_winpred_break_add_glm)$AIC

```

### + Win Chance + Gameday Rain {style="color: rgb(0, 0, 0); font-family: \"Lucida Sans\", \"DejaVu Sans\", \"Lucida Grande\", \"Segoe UI\", Verdana, Helvetica, sans-serif, serif; font-style: normal; font-variant-ligatures: none; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; caret-color: rgb(0, 0, 0); white-space: break-spaces; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"}

```{r}
#| label: rain-during-gameday

home_attendance_data |>
  ggplot(
    aes(x = Start_Time, y = AttNum, color = Rain)
  ) +
  geom_point() +
  geom_smooth(method = "glm", formula = y ~ exp(x), se = FALSE) #+
  #scale_colour_viridis_c()

time_winpred_rain_int_glm <- linear_reg() |>
  set_engine("glm") |>
  fit(AttNum ~ exp(Start_Time) * Rain + ESPN_WinPred, data = home_attendance_data)

time_winpred_rain_add_glm <- linear_reg() |>
  set_engine("glm") |>
  fit(AttNum ~ exp(Start_Time) + Rain + ESPN_WinPred, data = home_attendance_data)

tidy(time_winpred_rain_int_glm)
tidy(time_winpred_rain_add_glm)

glance(time_winpred_rain_int_glm)$AIC
glance(time_winpred_rain_add_glm)$AIC

```

### + Win Chance + is UNC game {style="color: rgb(0, 0, 0); font-family: \"Lucida Sans\", \"DejaVu Sans\", \"Lucida Grande\", \"Segoe UI\", Verdana, Helvetica, sans-serif, serif; font-style: normal; font-variant-ligatures: none; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; caret-color: rgb(0, 0, 0); white-space: break-spaces; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"}

```{r}
#| label: playing-against-UNC

home_attendance_data |>
  ggplot(
    aes(x = Start_Time, y = AttNum, color = UNC_Game)
  ) +
  geom_point() +
  geom_smooth(method = "glm", formula = y ~ exp(x), se = FALSE) #+
  #scale_colour_viridis_c()

time_winpred_UNC_int_glm <- linear_reg() |>
  set_engine("glm") |>
  fit(AttNum ~ exp(Start_Time) * UNC_Game + ESPN_WinPred, data = home_attendance_data)

time_winpred_UNC_add_glm <- linear_reg() |>
  set_engine("glm") |>
  fit(AttNum ~ exp(Start_Time) + UNC_Game + ESPN_WinPred, data = home_attendance_data)

tidy(time_winpred_UNC_int_glm)
tidy(time_winpred_UNC_add_glm)

glance(time_winpred_UNC_int_glm)$AIC
glance(time_winpred_UNC_add_glm)$AIC

```

### + Win Chance + Coverage {style="color: rgb(0, 0, 0); font-family: \"Lucida Sans\", \"DejaVu Sans\", \"Lucida Grande\", \"Segoe UI\", Verdana, Helvetica, sans-serif, serif; font-style: normal; font-variant-ligatures: none; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; caret-color: rgb(0, 0, 0); white-space: break-spaces; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"}

```{r}
#| label: TV-coverage

home_attendance_data |>
  ggplot(
    aes(x = Start_Time, y = AttNum, color = TV_Coverage)
  ) +
  geom_point() +
  geom_smooth(method = "glm", formula = y ~ exp(x), se = FALSE) #+
  #scale_colour_viridis_c()

time_winpred_TV_int_glm <- linear_reg() |>
  set_engine("glm") |>
  fit(AttNum ~ exp(Start_Time) * TV_Coverage * ESPN_WinPred, data = home_attendance_data)

time_winpred_TV_add_glm <- linear_reg() |>
  set_engine("glm") |>
  fit(AttNum ~ exp(Start_Time) + TV_Coverage * ESPN_WinPred, data = home_attendance_data)

tidy(time_winpred_TV_int_glm)
tidy(time_winpred_TV_add_glm)

glance(time_winpred_TV_int_glm)$AIC
glance(time_winpred_TV_add_glm)$AIC

```

## Best Models So Far {style="color: rgb(0, 0, 0); font-family: \"Lucida Sans\", \"DejaVu Sans\", \"Lucida Grande\", \"Segoe UI\", Verdana, Helvetica, sans-serif, serif; font-style: normal; font-variant-ligatures: none; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; caret-color: rgb(0, 0, 0); white-space: break-spaces; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"}

### Code

```{r}
#| label: best-models-so-far

tidy(time_winpred_add_glm)
tidy(time_winpred_TV_int_glm)

glance(time_winpred_add_glm)$AIC
glance(time_winpred_TV_int_glm)$AIC

home_attendance_data |>
  ggplot(
    aes(x = Start_Time, y = AttNum, color = ESPN_WinPred)
  ) +
  geom_point() +
  geom_smooth(method = "glm", formula = y ~ exp(x), se = FALSE, color = "orange") #+
  #scale_colour_viridis_c()

home_attendance_data |>
  ggplot(
    aes(x = Start_Time, y = AttNum, color = TV_Coverage)
  ) +
  geom_point() +
  geom_smooth(method = "glm", formula = y ~ exp(x), se = FALSE) #+
  #scale_colour_viridis_c()

```

### Model 1 (simpler):

$$
\widehat{AttNum} = 30285 + 0.0000276 * e^{(Start\_Time)} - 18051*(ESPN\_WinPred)
$$

**The further past 12 PM (earliest) that a game starts, the *more* people are predicted to attend.** The evidence for this claim is strongly **statistically significant.**

The more likely it is that Duke will win, the *less* people are predicted to attend. The evidence for this claim is only marginally significant.

### Model 2 (better matches observed attendance):

$$
\widehat{AttNum} = 44002 + 0.0000047*e^{(Start\_Time)} - 25470*ACCN 
\\- 21778*ACCNX - 46798*ESPN - 21442*ESPN3 
\\- 2137*(ESPN\_WinPred) + 0.0000561*ACCN*e^{(Start\_Time)} + \\0.0001093*ESPN*e^{(Start\_Time)} - 0.0000449*(ESPN\_WinPred)*e^{(Start\_Time)}
$$

$$
ACCN =
\begin{cases}
1 & \text{if broadcast on ACCN}\\
0 & \text{else}
\end{cases}\\
\\
ACCNX =
\begin{cases}
1 & \text{if broadcast on ACCNX}\\
0 & \text{else}
\end{cases}\\
\\
ESPN =
\begin{cases}
1 & \text{if broadcast on ESPN}\\
0 & \text{else}
\end{cases}\\
\\
ESPN3 =
\begin{cases}
1 & \text{if broadcast on ESPN3}\\
0 & \text{else}
\end{cases}\\
$$

*Description of model 2 TBD.*

## Time of Day (cont.) {style="color: rgb(0, 0, 0); font-family: \"Lucida Sans\", \"DejaVu Sans\", \"Lucida Grande\", \"Segoe UI\", Verdana, Helvetica, sans-serif, serif; font-style: normal; font-variant-ligatures: none; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; caret-color: rgb(0, 0, 0); white-space: break-spaces; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"}

### + Win Chance + Month

```{r}
#| label: month-of-game

home_attendance_data |>
  mutate(Month = as.factor(Month)) |>
  ggplot(
    aes(x = Start_Time, y = AttNum, color = Month)
  ) +
  geom_point() +
  geom_smooth(method = "glm", formula = y ~ exp(x), se = FALSE) #+
  #scale_colour_viridis_c()

home_attendance_data |>
  mutate(Month = as.factor(Month)) |>
  ggplot(
    aes(x = Month, y = AttNum, color = FPI)
  ) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(color = "FPI (lower = easier)") #+
  #scale_colour_viridis_c()

time_winpred_month_int_glm <- linear_reg() |>
  set_engine("glm") |>
  fit(AttNum ~ exp(Start_Time) * Month + ESPN_WinPred, data = home_attendance_data)

time_winpred_month_add_glm <- linear_reg() |>
  set_engine("glm") |>
  fit(AttNum ~ exp(Start_Time) + Month + ESPN_WinPred, data = home_attendance_data)

tidy(time_winpred_month_int_glm)
tidy(time_winpred_month_add_glm)

glance(time_winpred_month_int_glm)$AIC
glance(time_winpred_month_add_glm)$AIC


```

### + Win Chance + **Opponent Difficulty (FPI comparison)** {style="color: rgb(0, 0, 0); font-family: \"Lucida Sans\", \"DejaVu Sans\", \"Lucida Grande\", \"Segoe UI\", Verdana, Helvetica, sans-serif, serif; font-style: normal; font-variant-ligatures: none; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; caret-color: rgb(0, 0, 0); white-space: break-spaces; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"}

```{r}
#| label: opponent-difficulty

home_attendance_data |>
  ggplot(
    aes(x = Start_Time, y = AttNum, color = FPI_diff)
  ) +
  geom_point() +
  geom_smooth(method = "glm", formula = y ~ exp(x), se = FALSE, color = "orange") #+
  #scale_colour_viridis_c()

home_attendance_data |>
  ggplot(
    aes(x = FPI_diff, y = AttNum, color = ESPN_WinPred)
  ) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE)

#FPI only
fpi_lm <- linear_reg() |>
  set_engine("lm") |>
  fit(AttNum ~ FPI_diff, data = home_attendance_data)

#tidy(fpi_lm)
glance(fpi_lm)$AIC #[1]

#FPI and ESPN_WinPred
fpi_winpred_int_lm <- linear_reg() |>
  set_engine("lm") |>
  fit(AttNum ~ FPI_diff * ESPN_WinPred, data = home_attendance_data)

fpi_winpred_add_lm <- linear_reg() |>
  set_engine("lm") |>
  fit(AttNum ~ FPI_diff + ESPN_WinPred, data = home_attendance_data)

#tidy(fpi_winpred_int_lm)
#tidy(fpi_winpred_add_lm)

glance(fpi_winpred_int_lm)$AIC #[2]
glance(fpi_winpred_add_lm)$AIC #[3]

#FPI and Time
fpi_time_int_lm <- linear_reg() |>
  set_engine("lm") |>
  fit(AttNum ~ FPI_diff * Start_Time, data = home_attendance_data)

fpi_time_add_lm <- linear_reg() |>
  set_engine("lm") |>
  fit(AttNum ~ FPI_diff + Start_Time, data = home_attendance_data)

#tidy(fpi_time_int_lm)
#tidy(fpi_time_add_lm)

glance(fpi_time_int_lm)$AIC #[4]
glance(fpi_time_add_lm)$AIC #[5]


#Time, ESPN_WinPred, and FPI
time_winpred_fpi_int_glm <- linear_reg() |>
  set_engine("glm") |>
  fit(AttNum ~ exp(Start_Time) * FPI_diff + ESPN_WinPred, data = home_attendance_data)

time_winpred_fpi_add_glm <- linear_reg() |>
  set_engine("glm") |>
  fit(AttNum ~ exp(Start_Time) + FPI_diff + ESPN_WinPred, data = home_attendance_data)

glance(time_winpred_fpi_int_glm)$AIC #[6]
glance(time_winpred_fpi_add_glm)$AIC #[7]


#Time, ESPN_WinPred, TV, and FPI
time_winpred_TV_fpi_glm <- linear_reg() |>
  set_engine("glm") |>
  fit(AttNum ~ exp(Start_Time) * TV_Coverage + FPI_diff * ESPN_WinPred, data = home_attendance_data)

glance(time_winpred_TV_fpi_glm)$AIC #[8]

```

## B**est Model Using FPI** {style="color: rgb(0, 0, 0); font-family: \"Lucida Sans\", \"DejaVu Sans\", \"Lucida Grande\", \"Segoe UI\", Verdana, Helvetica, sans-serif, serif; font-style: normal; font-variant-ligatures: none; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; caret-color: rgb(0, 0, 0); white-space: break-spaces; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"}

```{r}
#| label: new-best-models

tidy(time_winpred_fpi_int_glm)
glance(time_winpred_fpi_int_glm)$AIC

```

$$
\widehat{AttNum} = 27119 + 0.0000354*e^{(Start\_Time)} - 466.638(FPI\_diff)
\\- 17156*(ESPN\_WinPred) + 0.00000321*(FPI\_diff)*e^{(Start\_Time)}
$$

**The further past 12 PM (earliest) that a game starts, the *more* people are predicted to attend.** *(very likely)*

When the opponent has a greater Power Index rating, somewhat *less* people are predicted to attend. *(uncertain claim)*

The more greatly Duke is predicted to win by ESPN, the *less* people are predicted to attend. *(somewhat uncertain claim)*

Start time and opponent Football Power Index (FPI) rating are likely [*not*]{.underline} independent variables.

## 1st Seed Quarterback

### 2023 Season

```{r}
#| label: first-seed


```
